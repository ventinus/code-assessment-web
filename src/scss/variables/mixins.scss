// ======================================================================================================
//
// Mixins
//
// ======================================================================================================

@import "./variables.scss";

// ------------------------------------------------
// Font Styles
// ------------------------------------------------
@mixin font-smoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// --------------------------------------------------
// Responsive Breakpoints
// --------------------------------------------------
$breakpoints: (
  'xs' : ( min-width:  $break-xs  ),
  'sm' : ( min-width:  $break-sm  ),
  'md' : ( min-width:  $break-md  ),
  'lg' : ( min-width:  $break-lg  ),
  'xl' : ( min-width:  $break-xl  )
);

@mixin breakpoint($name) {
  @media #{inspect(map-get($breakpoints, $name))} {
    @content;
  }
}

$max-breakpoints: (
  'sm' : ( max-width:  $break-sm  ),
  'md' : ( max-width:  $break-md  ),
  'lg' : ( max-width:  $break-lg  ),
  'xl' : ( max-width:  $break-xl  )
);


// --------------------------------------------------
// Keyframe
// --------------------------------------------------
@mixin animation($animate...) {
  $max: length($animate);
  $animations: '';

  @for $i from 1 through $max {
    $animations: #{$animations + nth($animate, $i)};

    @if $i < $max {
      $animations: #{$animations + ", "};
    }
  }
  -webkit-animation: $animations;
  -moz-animation:    $animations;
  -o-animation:      $animations;
  animation:         $animations;
}

@mixin keyframes($animationName) {
  @-webkit-keyframes #{$animationName} {
    @content;
  }
  @-moz-keyframes #{$animationName} {
    @content;
  }
  @-o-keyframes #{$animationName} {
    @content;
  }
  @keyframes #{$animationName} {
    @content;
  }
}

// --------------------------------------------------
// Rem Calculator
// --------------------------------------------------
@mixin font-size($sizeValue) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem;
}

// --------------------------------------------------
// Photoshop to CSS Letter Spacing Calcuation
// --------------------------------------------------
@mixin letter-spacing($spacingValue) {
  letter-spacing: ($spacingValue / 1000) + em;
}


@mixin no-touch($state: "") {
  @if $state != "" {
    @at-root .no-touch #{& + $state} {
      @content;
    }
  } @else {
    @at-root .no-touch #{&} {
      @content;
    }
  }
}

@mixin touch($state: "") {
  @if $state != "" {
    @at-root .touch #{& + $state} {
      @content;
    }
  } @else {
    @at-root .touch #{&} {
      @content;
    }
  }
}

@function default-transition($property, $duration: $default-animation-duration, $ease: ease-in-out, $delay: 0s) {
  @return $property $duration $ease $delay;
}
